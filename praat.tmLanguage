<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>scopeName</key>
    <string>source.praat</string>
    <key>name</key>
    <string>Praat</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#language</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#paren-expression</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>interpolation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\[0-7]{1,3}</string>
            <key>name</key>
            <string>constant.character.escape.octal.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\\x[0-9A-Fa-f]{1,2}</string>
            <key>name</key>
            <string>constant.character.escape.hex.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\\u{[0-9A-Fa-f]+}</string>
            <key>name</key>
            <string>constant.character.escape.unicode.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\\[nrtvef$\\]</string>
            <key>name</key>
            <string>constant.character.escape.praat</string>
          </dict>
        </array>
      </dict>
      <key>string-double-quoted</key>
      <dict>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.praat</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.string-contents.quoted.double.praat</string>
        <key>end</key>
        <string>("|$)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.quoted.double.praat</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#interpolation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-single-quoted</string>
          </dict>
        </array>
      </dict>
      <key>string-single-quoted</key>
      <dict>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.praat</string>
          </dict>
        </dict>
        <key>contentName</key>
        <string>meta.string-contents.quoted.single.praat</string>
        <key>end</key>
        <string>('|$)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>variable.string.quoted.single.praat</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\\[\\']</string>
            <key>name</key>
            <string>constant.character.escape.praat</string>
          </dict>
        </array>
      </dict>
      <key>regex-double-quoted</key>
      <dict>
        <key>begin</key>
        <string>(?x)"/ (?= (\\.|[^"/])++/[imsxeADSUXu]*" )</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.praat</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(/)([imsxeADSUXu]*)(")</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.regexp.double-quoted.praat</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Escaped from the regexp â€“ there can also be 2 backslashes (since 1 will escape the first)</string>
            <key>match</key>
            <string>(\\){1,2}[.$^\[\]{}]</string>
            <key>name</key>
            <string>constant.character.escape.regex.praat</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interpolation</string>
          </dict>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arbitrary-repetition.praat</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arbitrary-repetition.praat</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(\{)\d+(,\d+)?(\})</string>
            <key>name</key>
            <string>string.regexp.arbitrary-repetition.praat</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\[(?:\^?\])?</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.praat</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\]</string>
            <key>name</key>
            <string>string.regexp.character-class.praat</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#interpolation</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>[$^+*]</string>
            <key>name</key>
            <string>keyword.operator.regexp.praat</string>
          </dict>
        </array>
      </dict>
      <key>regex-single-quoted</key>
      <dict>
        <key>begin</key>
        <string>(?x)'/ (?= ( \\ (?: \\ (?: \\ [\\']? | [^'] ) | . ) | [^'/] )++/[imsxeADSUXu]*' )</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.praat</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(/)([imsxeADSUXu]*)(')</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>string.regexp.single-quoted.praat</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arbitrary-repetition.praat</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.arbitrary-repetition.praat</string>
              </dict>
            </dict>
            <key>match</key>
            <string>(\{)\d+(,\d+)?(\})</string>
            <key>name</key>
            <string>string.regexp.arbitrary-repetition.praat</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\[(?:\^?\])?</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.praat</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\]</string>
            <key>name</key>
            <string>string.regexp.character-class.praat</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#single_quote_regex_escape</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>match</key>
            <string>[$^+*]</string>
            <key>name</key>
            <string>keyword.operator.regexp.praat</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#single_quote_regex_escape</string>
          </dict>
        </array>
        <key>repository</key>
        <dict>
          <key>single_quote_regex_escape</key>
          <dict>
            <key>comment</key>
            <string>Support both praat string and regex escaping</string>
            <key>match</key>
            <string>(?x) \\ (?: \\ (?: \\ [\\']? | [^'] ) | . )</string>
            <key>name</key>
            <string>constant.character.escape.praat</string>
          </dict>
        </dict>
      </dict>
      <key>comments</key>
      <dict>
        <key>begin</key>
        <string>(^|\s|\t|\b)(#|;)</string>
        <key>end</key>
        <string>$</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.comment.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>comment.line.number-sign.praat</string>
      </dict>
      <key>console</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(write|append)((Info|File)(Line)?)\b</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.praat</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.variable.language.praat</string>
              </dict>
            </dict>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(clear)</string>
            <key>end</key>
            <string>(info)\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.function.praat</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.variable.language.praat</string>
              </dict>
            </dict>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(echo|printline)\b</string>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
        </array>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predefined-string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-single-quoted</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex-double-quoted</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-double-quoted</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex-single-quoted</string>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>match</key>
        <string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
        <key>name</key>
        <string>constant.numeric.praat</string>
      </dict>
      <key>numeric-variables</key>
      <dict>
        <key>match</key>
        <string>^(\b|\s|\t)*?([a-z])(?i)((?:_?[a-z0-9_]+))?(\b|\s)*?\=</string>
        <key>captures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>variable.other.praat</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>variable.other.praat</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>variable.other.praat</string>
          </dict>
          <key>4</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.praat</string>
          </dict>
        </dict>
      </dict>
      <key>string-variables</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\b|\s|\t)*?[a-z](?i)(?:_?[a-z0-9_]+)\$(\b|\s)?</string>
            <key>name</key>
            <string>variable.other.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(this)\b</string>
            <key>name</key>
            <string>variable.language.this.praat</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.variable.praat</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>proc-declaration</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\b|\s|\t)*?(procedure)\s([a-z][a-zA-Z0-9_]+)(\:)?(\b|\s)?</string>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.control.praat</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>support.function.praat</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>support.function.praat</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>class-builtin</key>
      <dict>
        <key>match</key>
        <string>\b((Long)?Sound|Text(Grid|Tier)|Formant(Grid)?|Strings|all|Intensity(Tier)?|Pitch(Tier)?|PointProcess|Table(OfReal)?|Matrix|Polygon|Distributions|PairDistribution|Permutation|ParamCurve|Harmonicity|Electroglottogram|Spectrum|Ltas|LPC|Cepstrum|(LF|MF)?CC|Excitation(s)?|Cochleagram|Manipulation|Duration(Tier)?|Speaker|Articulation|VocalTract|FFNet|PatternList|Categories|Eigen|Polynomial|Roots|ChebyshevSeries|LegendreSeries|(I|M)Spline|Covariance|Confusion|Discriminant|ExperimentMFC|PCA|Correlation|ClassificationTable|SSCP|DTW|Configuration|Dissimilarity|Similarity|Distance|ScalarProduct|ContingencyTable|OTGrammar|WordList|SpellingChecker)\b</string>
        <key>name</key>
        <string>support.class.builtin.praat</string>
      </dict>
      <key>control</key>
      <dict>
        <key>match</key>
        <string>\b(for|while|end(for|while|if|form|proc)|from|to|repeat|until|if|then|fi|else|elsif|elif|nowarn|noprogress|nocheck|assert|form|call|procedure|Edit)\b</string>
        <key>name</key>
        <string>keyword.control.praat</string>
      </dict>
      <key>sound-spectrum-function</key>
      <dict>
        <key>match</key>
        <string>\b(To (Spectrum|Ltas( \(pitch-corrected\))?|Spectrogram( \(pitch-dependent\))?|Cochleagram|BarkSpectrogram|MelSpectrogram|Formant \((burg|keep all|sl|robust)\)|FormantPath( \(burg\))?|LPC \((autocorrelation|covariance|burg|marple)\)|MFCC))</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-draw-function</key>
      <dict>
        <key>match</key>
        <string>\b(Draw( where)?|Paint (where|enclosed))\b</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-query-function</key>
      <dict>
        <key>match</key>
        <string>\b(Get (start time|end time|total duration|number of channels|number of samples|sampling period|sampling frequency|time from sample number|sample number from time|value at (time|sample number)|minimum|maximum|time of (minimum|maximum)|absolute extremum|nearest (zero crossing|level crossing)|mean|root-mean-square|standard deviation|energy( in air)?|power( in air)?|intensity \(dB\))|List all sample times)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-modify-function</key>
      <dict>
        <key>match</key>
        <string>\b(Shift times (by|to)|Scale (peak|intensity|times (by|to))|Reverse|Formula( \(part\))?|Add|Subtract mean|Multiply( by window)?|Set (value at sample number|part to zero)|Override sampling frequency|Pre-emphasize \(in-place\)|De-emphasize \(in-place\))</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-annotate-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(To TextGrid( \((silences|voice activity)\))?)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-periodicity-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(To (Manipulation|Pitch( \((ac|cc|SPINET|shs)\))?|PointProcess \((periodic\, cc|periodic\, peaks|extrema|zeroes)\)|Harmonicity \(cc|ac|gne\)|PowerCepstrogram)|Autocorrelate)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-convert-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Convert to (mono|stereo)|Extract (all channels|one channel|channels|part( for overlap)?|Electroglottogram)|Resample|To (Sound \((white channels|bss)\)|CrossCorrelationTable)|Lengthen \(overlap-add\)|Deepen band modulation|Change gender|Down to Matrix)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-filter-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Filter \((pass Hann band|stop Hann band|formula|one formant|pre\-emphasis|de\-emphasis|gammatone|inverse)\)|Reduce noise)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-combine-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Combine (to stereo|into Sound(List|Set))|Concatenate( recoverably| with overlap)?|Convolve|Cross\-correlate|To (CrossCorrelationTable \(combined\)|DTW|ParamCurve))</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-gui-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(View \&amp; Edit alone)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-tabulate-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Down to table|List|Tabulate occurrences)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-query-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Get (start time( of interval)?|end time( of interval)?|total duration( of interval)?|(maximum )?number of (tiers|intervals|points)|tier name|(start|end) time of (interval|point)|label of (interval|point)|(low |high )?interval at time|interval (edge|boundary) from time|total dutaion of intervals where|(low|high|nearest) index from time)|Is interval tier|Count (intervals|points) where)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-analyse-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Extract (one tier|part)|To Table \(text alignment\)|Get (starting|centre|end) points|Get points \((preceded|followed)\))</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-synthesize-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Merge|Concatenate|To DurationTier)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>textgrid-sound-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(View \&amp; Edit|Draw|Extract (all|non\-empty) intervals|Extract intervals where|Scale times|Close time domain)</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>sound-function</key>
      <dict>
        <key>match</key>
        <string>\b(Play|To Intensity|Down to)\b</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>strings-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Get (number of strings|string)|List all strings|(Set|Insert|Remove) string|Randomize|Sort|Convert to (backslash trigraphs|Unicode)|Replace all|To (Distributions|Permutation|WordList|Categories)|Append)\b</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>string-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(length|left\$|right\$|mid\$|index(_regex)?|rindex(_regex)?|startsWith|endsWith|replace\$|replace_regex(\$)?|string\$|fixed\$|percent\$|number|date\$|unicode\$|extract(Number|Word\$|Line\$)|backslashTrigraphsToUnicode\$)(\s)?</string>
        <key>name</key>
        <string>support.function.string.praat</string>
      </dict>
      <key>file-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(fileReadable|readFile(\$)?|createFolder|deleteFile|fileNames\$\#)(\b|\s)</string>
        <key>name</key>
        <string>support.function.string.praat</string>
      </dict>
      <key>sound-save-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b((Save as|Write to) ((short)? text|binary|((24|32)\-bit )?WAV|AIFF|AIFC|Next\/Sun|NIST|FLAC|Kay|raw (8\-bit (un)?signed|(16|24|32)\-bit (big|little)\-endian)) file|Append to existing sound file)\b</string>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
        </dict>
      </dict>
      <key>other-save-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b((Save as|Write to) ((short |chronological |matrix )?text|binary|headerless spreadsheet) file)\b</string>
        <key>name</key>
        <string>support.function.string.praat</string>
      </dict>
      <key>import</key>
      <dict>
        <key>match</key>
        <string>(?i)\b(include)\s</string>
        <key>name</key>
        <string>keyword.control.import.include.praat</string>
      </dict>
      <key>select-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(select(Object| all)?|plus(Object)?|minus(Object)?|Remove|removeObject|Concatenate|Rename|Selected(\$)?|Info|Inspect|Copy)\b</string>
        <key>captures</key>
        <dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
        </dict>
      </dict>
      <key>types-builtin</key>
      <dict>
        <key>match</key>
        <string>\b(real|positive|integer|natural|word|sentence|text|boolean|choice|button|comment|(in|out)file|folder|option(menu)?|(?i)hertz|(?i)mono|(?i)stereo)\b</string>
        <key>name</key>
        <string>storage.type.praat</string>
      </dict>
      <key>interface-function</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(pauseScript|beginPause|endPause|runSystem(_nocheck)?)\b</string>
            <key>name</key>
            <string>support.function.praat</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\s)*?\b(printline|exit|pause|echo|print|exitScript[:])\s</string>
            <key>end</key>
            <string>(.)*?$</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>support.function.praat</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.punctuation.praat</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\s)*?\bform\s</string>
            <key>end</key>
            <string>(.)*?$</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.praat</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.punctuation.praat</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(\s)*?\bcomment\s</string>
            <key>end</key>
            <string>(.)*?$</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.praat</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.punctuation.praat</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>new-menu-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Record (mono|stereo) Sound|Create (Sound (from formula|as (pure tone|tone complex|gammatone|Shepard tone)|from VowelEditor)|(simple )?Matrix( from values)?|(simple )? Photo|Table with(out)? column names|simple (Confusion|Covariance|Correlation)|empty EditCostsTable|empty PointProcess|Poisson process|(Pitch|Intensity|Duration|Amplitude|Real)Tier|FormantGrid|TextGrid|Corpus|Strings (as file list|as folder list|from tokens)|Articulation|Speaker|Artword|Vocal Tract from phone|Permutation|SpeechSynthesizer))\b</string>
        <key>name</key>
        <string>support.function.praat</string>
      </dict>
      <key>open-menu-function</key>
      <dict>
        <key>match</key>
        <string>(\s)*?\b(Read (from file|Sound (Alaw file|16\-bit (Little|Big) Endian file)|separate channels from sound file|Matrix from raw text file|TableOfReal from headerless spreadsheet file|Table from (tab|comma|semicolon|whitespace)\-separated file|Strings from raw text file|(Text|Interval)Tier from Xwaves)|Open long sound file)\b</string>
        <key>name</key>
        <string>support.function.string.praat</string>
      </dict>
      <key>predefined-numeric</key>
      <dict>
        <key>comment</key>
        <string>Pre-defined variables that have numerical values.</string>
        <key>match</key>
        <string>\b(macintosh|windows|unix|praatVersion|pi|e|undefined|stopwatch)\b</string>
        <key>name</key>
        <string>constant.language.praat</string>
      </dict>
      <key>predefined-string</key>
      <dict>
        <key>match</key>
        <string>\s*(newline|tab|shellDirectory|environment)\$\s*</string>
        <key>name</key>
        <string>constant.language.praat</string>
      </dict>
      <key>assignment</key>
      <dict>
        <key>match</key>
        <string>=</string>
        <key>name</key>
        <string>keyword.operator.key.praat</string>
      </dict>
      <key>math</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\-|\^|\*|\/|\+|(\&lt;\&gt;)|\&lt;|\&gt;|(\&lt;\=)|(\&gt;\=)</string>
            <key>name</key>
            <string>keyword.operator.key.praat</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\b(abs|round|floor|ceiling|sqrt|min|max|imin|imax|sin(c(pi)?|h)?|cos(h)?|tan(h)?|arcsin(h)?|arccos(h)?|arctan(h|2)?|exp|ln|log(10|2)|sigmoid|invSigmoid|erf(c)?|random(Uniform|Integer|Gauss|Poisson|Gamma|_initilialize(WithSeedUnsafelyButPredictably|SafelyAndUnpredictably))|Gauss(P|Q)|lnGamma|invGaussQ|chiSquare(P|Q)|invChiSquareQ|student(P|Q)|fisher(P|Q)|invFisherQ|binomial(P|Q)|incBinomial(P|Q)|hertzTo(Bark|Mel|Semitomes|Erb)|barkToHertz|melToHertz|semitonesToHertz|erb(ToHertz)?|phonToDifferenceLimens|differenceLimensToPhon|beta|bessel(I|K))\b</string>
            <key>name</key>
            <string>support.function.math.praat</string>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>comment</key>
            <string>Text-based operators are colored to signal their pre-defined functions to the user.</string>
            <key>match</key>
            <string>\.\.\.\s|\b(\:\s|not|and|or|div|mod|yes|no|self)\b</string>
            <key>name</key>
            <string>constant.language.operator.praat</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#math</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#assignment</string>
          </dict>
        </array>
      </dict>
      <key>paren-expression</key>
      <dict>
        <key>begin</key>
        <string>\(</string>
        <key>end</key>
        <string>\)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.paren.open.praat</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.paren.close.praat</string>
          </dict>
        </dict>
        <key>name</key>
        <string>expression.group</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#language</string>
          </dict>
        </array>
      </dict>
      <key>language</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comments</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predefined-numeric</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#predefined-string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#file-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#interface-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#open-menu-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#new-menu-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-save-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#other-save-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-query-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-gui-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-tabulate-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-analyse-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-synthesize-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-sound-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-draw-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-query-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-modify-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-annotate-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-periodicity-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-spectrum-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-convert-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-filter-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#sound-combine-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#select-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#math-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#proc-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string-variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#console</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-builtin</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types-builtin</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#textgrid-function</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numeric-variables</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>